{"version":3,"sources":["methods/typedict.ts","themes/Yuki.ts","methods/constants.ts","methods/globals.ts","routings/Home.tsx","routings/BadUrl.tsx","themes/BackgroundCanvas.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["PageBody","Component","Yuki","colortab","color","border","data","items","particals","start","ctx","canvas","style","backgroundColor","cursor","paint","end","next","clearTimeout","width","height","max","Math","sqrt","fillStyle","fillRect","nextList","nextParticals","forEach","item","r","dist","gradient","createRadialGradient","x","y","addColorStop","a","beginPath","moveTo","lineTo","fill","closePath","arc","PI","dx","random","ri","pow","abs","prevDx","dd","prevDd","min","push","p","g","b","animation","opacity","ms","size","life","strokeStyle","lineWidth","stroke","possibility","length","setTimeout","mouseListener","e","type","clientX","clientY","i","sx","sy","floor","t","$","window","touchListener","touches","j","Shared","theme","Home","margin","padding","boxShadow","replace","BadUrl","BackgroundCanvas","props","state","curTheme","initTheme","React","createRef","ref","this","position","top","left","zIndex","onMouseOver","onMouseOut","onClick","onMouseMove","onTouchStart","onTouchMove","onTouchEnd","children","current","getContext","on","App","className","path","exact","component","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.f59d90dc.chunk.js","sourcesContent":["/*\r\n * @Author: Antoine YANG \r\n * @Date: 2020-08-28 20:55:09 \r\n * @Last Modified by: Antoine YANG\r\n * @Last Modified time: 2020-08-29 15:27:17\r\n */\r\n\r\nimport { Component } from \"react\";\r\n\r\n\r\n/**\r\n * 当定义一个页面主体的元素时，\r\n * 使用 PageBody 类型代表一个接受空 props 初始化的 React 组件.\r\n * \r\n * @export\r\n * @class PageBody\r\n * @extends {Component<{}, S>}\r\n * @template S 组件的 state 的类型\r\n */\r\nexport class PageBody<S> extends Component<{}, S> {};\r\n\r\n/**\r\n * 页面的配色方案.\r\n *\r\n * @export\r\n * @interface Colortab\r\n */\r\nexport interface Colortab {\r\n    color: string;\r\n    border: string;\r\n};\r\n\r\n/**\r\n * 为页面指定的配色方案和背景的绘制动画.\r\n *\r\n * @export\r\n * @interface Theme\r\n * @template T 组件绘制过程中记录的数据的结构\r\n */\r\nexport interface Theme<T=any> {\r\n    /**\r\n     * 配色方案.\r\n     */\r\n    colortab: Colortab;\r\n    /**\r\n     * 绘制下一帧的定时器.\r\n     */\r\n    next?: NodeJS.Timeout;\r\n    /**\r\n     * 组件绘制过程中记录的数据.\r\n     */\r\n    data: T;\r\n    /**\r\n     * 开始绘制.\r\n     */\r\n    start: (ctx: CanvasRenderingContext2D) => void;\r\n    /**\r\n     * 绘制一帧.\r\n     */\r\n    paint: (ctx: CanvasRenderingContext2D) => void;\r\n    /**\r\n     * 结束绘制.\r\n     */\r\n    end: () => void;\r\n    /**\r\n     * 鼠标交互.\r\n     */\r\n    mouseListener?: (e: React.MouseEvent) => void;\r\n    /**\r\n     * 触屏交互.\r\n     */\r\n    touchListener?: (e: React.TouchEvent) => void;\r\n};\r\n\r\n\r\n/**\r\n * 粒子特效.\r\n *\r\n * @export\r\n * @interface Partical\r\n */\r\nexport interface Partical {\r\n    color: {\r\n        r: number;\r\n        g: number;\r\n        b: number;\r\n    };\r\n    animation: {\r\n        x: (ms: number) => number;\r\n        y: (ms: number) => number;\r\n        opacity: (ms: number) => number;\r\n        size: (ms: number) => number;\r\n    };\r\n    ms: number;\r\n    life: number;\r\n};\r\n","/*\r\n * @Author: Antoine YANG \r\n * @Date: 2020-08-28 21:37:20 \r\n * @Last Modified by: Antoine YANG\r\n * @Last Modified time: 2020-08-29 16:07:12\r\n */\r\n\r\nimport { Theme, Partical } from \"../methods/typedict\";\r\nimport $ from \"jquery\";\r\nimport { BackgroundCanvasRenderingFPS } from \"../methods/constants\";\r\n\r\n\r\ninterface SnowBall {\r\n    r: number;\r\n    x: number;\r\n    y: number;\r\n    a: number;\r\n    dist: number;\r\n    prevDx: number;\r\n    prevDd: number;\r\n};\r\n\r\ninterface YukiState {\r\n    items: Array<SnowBall>;\r\n    particals: Array<Partical>;\r\n    cursor?: { x:number; y: number; };\r\n};\r\n\r\n/** 主题：雪 */\r\nexport const Yuki: Theme<YukiState> = {\r\n    colortab: {\r\n        color: \"rgb(208,213,215)\",\r\n        border: \"rgb(155,255,254)\"\r\n    },\r\n    data: {\r\n        items: [],\r\n        particals: []\r\n    },\r\n    start: (ctx: CanvasRenderingContext2D) => {\r\n        ctx.canvas.style.backgroundColor = \"rgb(11,11,14)\";\r\n        Yuki.data = {\r\n            items: [],\r\n            particals: [],\r\n            cursor: void 0\r\n        };\r\n        Yuki.paint(ctx);\r\n    },\r\n    end: () => {\r\n        if (Yuki.next) {\r\n            // 清除定时器\r\n            clearTimeout(Yuki.next);\r\n            Yuki.next = void 0;\r\n        }\r\n        Yuki.data = {\r\n            items: [],\r\n            particals: [],\r\n            cursor: void 0\r\n        };\r\n    },\r\n    paint: (ctx: CanvasRenderingContext2D) => {\r\n        /** 到下一帧的间隔毫秒数 */\r\n        const span: number = 1000 / BackgroundCanvasRenderingFPS;\r\n        const width: number = ctx.canvas.width;\r\n        const height: number = ctx.canvas.height;\r\n        const max: number = Math.sqrt(width * height) / 16;\r\n\r\n        // 绘制和更新\r\n        ctx.fillStyle = \"rgb(11,11,14)\";\r\n        ctx.fillRect(0, 0, width, height);\r\n\r\n        let nextList: Array<SnowBall> = [];\r\n        let nextParticals: Array<Partical> = [];\r\n\r\n        Yuki.data.items.forEach(item => {\r\n            const r: number = item.r * item.dist;\r\n            if (r <= 0) {\r\n                // 消失\r\n                const r: number = 0.23 * max;\r\n                const gradient: CanvasGradient = ctx.createRadialGradient(\r\n                    item.x, item.y, r * 0.6, item.x, item.y, r\r\n                );\r\n                gradient.addColorStop(0, `rgba(212,215,217,${ item.a })`);\r\n                gradient.addColorStop(0.6, `rgba(181,183,184,${ item.a * 0.6 })`);\r\n                gradient.addColorStop(1, `rgba(72,73,74,${ item.a * 0.1 })`);\r\n                ctx.fillStyle = gradient;\r\n                ctx.beginPath();\r\n                ctx.moveTo(item.x, item.y - r);\r\n                ctx.lineTo(item.x + r / 25, item.y - r / 25);\r\n                ctx.lineTo(item.x + r, item.y);\r\n                ctx.lineTo(item.x + r / 25, item.y + r / 25);\r\n                ctx.lineTo(item.x, item.y + r);\r\n                ctx.lineTo(item.x - r / 25, item.y + r / 25);\r\n                ctx.lineTo(item.x - r, item.y);\r\n                ctx.lineTo(item.x - r / 25, item.y - r / 25);\r\n                ctx.lineTo(item.x, item.y - r);\r\n                ctx.fill();\r\n                ctx.closePath();\r\n                return;\r\n            }\r\n\r\n            const gradient: CanvasGradient = ctx.createRadialGradient(\r\n                item.x, item.y, r * 0.3, item.x, item.y, r\r\n            );\r\n            gradient.addColorStop(0, `rgba(212,215,217,${ item.a })`);\r\n            gradient.addColorStop(0.6, `rgba(181,183,184,${ item.a * 0.6 })`);\r\n            gradient.addColorStop(1, `rgba(72,73,74,${ item.a * 0.1 })`);\r\n            ctx.fillStyle = gradient;\r\n            ctx.beginPath();\r\n            ctx.arc(item.x, item.y, r, 0, 2 * Math.PI);\r\n            ctx.fill();\r\n            ctx.closePath();\r\n\r\n            // 移动\r\n            let dx: number = (\r\n                (Math.random() - 0.5) * width / 36\r\n            ) / BackgroundCanvasRenderingFPS;\r\n            let ri: number = Math.pow(dx, 2) / Math.pow(\r\n                Math.abs(dx) + Math.abs(\r\n                    item.prevDx * BackgroundCanvasRenderingFPS / 2\r\n                ), 2\r\n            );\r\n            dx = ri * dx + (1 - ri) * item.prevDx;\r\n            item.x += dx * (1 - item.dist);\r\n            item.prevDx = dx;\r\n            item.y += (\r\n                1 + 4 * r / BackgroundCanvasRenderingFPS\r\n            ) * height / 1600 * (1 + item.y / height * 0.4);\r\n            if (item.y - r <= height) {\r\n                // 留下来\r\n                let dd: number = (Math.random() - 0.5) * 0.005;\r\n                let ri: number = Math.pow(dd, 2) / Math.pow(\r\n                    Math.abs(dd) + Math.abs(\r\n                        item.prevDd * BackgroundCanvasRenderingFPS / 2\r\n                    ), 2\r\n                );\r\n                dd = ri * dd + (1 - ri) * item.prevDd;\r\n                item.dist += dd;\r\n                item.prevDd = dd;\r\n                const a: number = Math.min(1, 1 - 0.2 * item.dist);\r\n                if (item.a < a) {\r\n                    item.a += Math.random() * 0.16 / BackgroundCanvasRenderingFPS;\r\n                }\r\n                item.a = Math.min(item.a, a);\r\n                nextList.push(item);\r\n            }\r\n        });\r\n\r\n        Yuki.data.particals.forEach(p => {\r\n            ctx.fillStyle = `rgba(${ p.color.r },${ p.color.g },${ p.color.b },${\r\n                p.animation.opacity(p.ms)\r\n            })`;\r\n            ctx.fillRect(\r\n                p.animation.x(p.ms),\r\n                p.animation.y(p.ms),\r\n                p.animation.size(p.ms),\r\n                p.animation.size(p.ms)\r\n            );\r\n\r\n            p.ms += span;\r\n            if (p.ms < p.life) {\r\n                // 还未结束\r\n                nextParticals.push(p);\r\n            }\r\n        });\r\n\r\n        // 鼠标指针\r\n        if (Yuki.data.cursor) {\r\n            ctx.strokeStyle = \"rgb(23,126,209)\";\r\n            ctx.lineWidth = 1;\r\n            ctx.beginPath();\r\n            ctx.moveTo(Yuki.data.cursor.x, Yuki.data.cursor.y);\r\n            ctx.lineTo(Yuki.data.cursor.x + 16, Yuki.data.cursor.y + 16);\r\n            ctx.lineTo(Yuki.data.cursor.x + 6, Yuki.data.cursor.y + 22);\r\n            ctx.lineTo(Yuki.data.cursor.x, Yuki.data.cursor.y);\r\n            ctx.stroke();\r\n        }\r\n\r\n        // 下一帧状态\r\n        Yuki.data.items = [...nextList];\r\n        Yuki.data.particals = [...nextParticals];\r\n        /** 再生成一个光球的概率指数 */\r\n        let possibility: number = (\r\n            max - Yuki.data.items.length\r\n        ) / max * 3 / BackgroundCanvasRenderingFPS;\r\n\r\n        while (possibility > 0) {\r\n            possibility -= Math.random();\r\n\r\n            if (possibility > 0) {\r\n                Yuki.data.items.push({\r\n                    x: Math.random() * width,\r\n                    y: Math.random() * height * 0.2,\r\n                    r: (Math.random() * 0.25 + 0.09) * max,\r\n                    a: Math.random() * 0.03 + 0.02,\r\n                    dist: 0.7 - Math.random() * Math.random() * 0.3,\r\n                    prevDx: 0,\r\n                    prevDd: 0\r\n                });\r\n            }\r\n        }\r\n        \r\n        // 更新定时器\r\n        Yuki.next = setTimeout(() => {\r\n            Yuki.paint(ctx);\r\n        }, span);\r\n    },\r\n    mouseListener: (e: React.MouseEvent) => {\r\n        if (e.type === \"mouseout\") {\r\n            Yuki.data.cursor = void 0;\r\n        } else if (e.type === \"mouseover\" || e.type === \"mousemove\") {\r\n            Yuki.data.cursor = {\r\n                x: e.clientX,\r\n                y: e.clientY\r\n            };\r\n        } else if (e.type === \"click\") {\r\n            // 粒子效果\r\n            const x: number = e.clientX;\r\n            const y: number = e.clientY;\r\n            for (let i: number = 0; i < 6; i++) {\r\n                /** x 方向运动速度(每秒移动距离) */\r\n                let sx: number = (Math.random() * 2 - 1) * 100;\r\n                sx += (sx > 0 ? 1 : -1) * 20 * Math.random();\r\n                /** y 方向初始运动速度(每秒移动距离) */\r\n                const sy: number = 0 - Math.random() * Math.random() * 256 - 128;\r\n\r\n                Yuki.data.particals.push({\r\n                    color: {\r\n                        r: 63,\r\n                        g: 192 + Math.floor(Math.random() * 30),\r\n                        b: 252\r\n                    },\r\n                    animation: {\r\n                        x: ms => x + sx * ms / 1000,\r\n                        y: ms => y + sy * ms / 1000 + ms * ms / 2000,\r\n                        opacity: ms => 1 - 0.4 * ms / 400,\r\n                        size: ms => 6 - 1.5 * ms / 400\r\n                    },\r\n                    life: 400,\r\n                    ms: 0\r\n                });\r\n            }\r\n            for (let i: number = 0; i < 9; i++) {\r\n                /** x 方向运动速度(每秒移动距离) */\r\n                let sx: number = (Math.random() * 2 - 1) * 120;\r\n                sx += (sx > 0 ? 1 : -1) * 24 * Math.random();\r\n                /** y 方向初始运动速度(每秒移动距离) */\r\n                const sy: number = 0 - Math.random() * Math.random() * 282 - 141;\r\n\r\n                Yuki.data.particals.push({\r\n                    color: {\r\n                        r: 63,\r\n                        g: 172 + Math.floor(Math.random() * 40),\r\n                        b: 252\r\n                    },\r\n                    animation: {\r\n                        x: ms => x + sx * ms / 1000,\r\n                        y: ms => y + sy * ms / 1000 + ms * ms / 2000,\r\n                        opacity: ms => 1 - 0.6 * ms / 400,\r\n                        size: ms => 4 - 1 * ms / 400\r\n                    },\r\n                    life: 400,\r\n                    ms: 0\r\n                });\r\n            }\r\n\r\n            // 元素交互\r\n            for (let i: number = 0; i < Yuki.data.items.length; i++) {\r\n                const d2: number = Math.pow(\r\n                    Yuki.data.items[i].x - e.clientX, 2\r\n                ) + Math.pow(\r\n                    Yuki.data.items[i].y - e.clientY, 2\r\n                );\r\n                if (d2 <= Math.pow(Yuki.data.items[i].r, 2)) {\r\n                    const item: SnowBall = Yuki.data.items[i];\r\n                    for (let t: number = 0; t < 2600; t += Math.floor(\r\n                        1000 / BackgroundCanvasRenderingFPS\r\n                    )) {\r\n                        setTimeout(() => {\r\n                            if (item) {\r\n                                item.y -= (\r\n                                    1 + 4 * item.r * item.dist / BackgroundCanvasRenderingFPS\r\n                                ) * Math.sqrt(2600 - t) * $(window).height()! / 40000;\r\n                            }\r\n                        }, t);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    },\r\n    touchListener: (e: React.TouchEvent) => {\r\n        if (e.touches.length) {\r\n            for (let j: number = 0; j < e.touches.length; j++) {\r\n                // 粒子效果\r\n                const x: number = e.touches[j].clientX;\r\n                const y: number = e.touches[j].clientY;\r\n                for (let i: number = 0; i < 6; i++) {\r\n                    /** x 方向运动速度(每秒移动距离) */\r\n                    let sx: number = (Math.random() * 2 - 1) * 100;\r\n                    sx += (sx > 0 ? 1 : -1) * 20 * Math.random();\r\n                    /** y 方向初始运动速度(每秒移动距离) */\r\n                    const sy: number = 0 - Math.random() * Math.random() * 256 - 128;\r\n    \r\n                    Yuki.data.particals.push({\r\n                        color: {\r\n                            r: 63,\r\n                            g: 192 + Math.floor(Math.random() * 30),\r\n                            b: 252\r\n                        },\r\n                        animation: {\r\n                            x: ms => x + sx * ms / 1000,\r\n                            y: ms => y + sy * ms / 1000 + ms * ms / 2000,\r\n                            opacity: ms => 1 - 0.4 * ms / 400,\r\n                            size: ms => 6 - 1.5 * ms / 400\r\n                        },\r\n                        life: 400,\r\n                        ms: 0\r\n                    });\r\n                }\r\n                for (let i: number = 0; i < 9; i++) {\r\n                    /** x 方向运动速度(每秒移动距离) */\r\n                    let sx: number = (Math.random() * 2 - 1) * 120;\r\n                    sx += (sx > 0 ? 1 : -1) * 24 * Math.random();\r\n                    /** y 方向初始运动速度(每秒移动距离) */\r\n                    const sy: number = 0 - Math.random() * Math.random() * 282 - 141;\r\n    \r\n                    Yuki.data.particals.push({\r\n                        color: {\r\n                            r: 63,\r\n                            g: 172 + Math.floor(Math.random() * 40),\r\n                            b: 252\r\n                        },\r\n                        animation: {\r\n                            x: ms => x + sx * ms / 1000,\r\n                            y: ms => y + sy * ms / 1000 + ms * ms / 2000,\r\n                            opacity: ms => 1 - 0.6 * ms / 400,\r\n                            size: ms => 4 - 1 * ms / 400\r\n                        },\r\n                        life: 400,\r\n                        ms: 0\r\n                    });\r\n                }\r\n                // 元素交互\r\n                for (let i: number = 0; i < Yuki.data.items.length; i++) {\r\n                    const d2: number = Math.pow(\r\n                        Yuki.data.items[i].x - e.touches[j].clientX, 2\r\n                    ) + Math.pow(\r\n                        Yuki.data.items[i].y - e.touches[j].clientY, 2\r\n                    );\r\n                    if (d2 <= Math.pow(Yuki.data.items[i].r, 2)) {\r\n                        const item: SnowBall = Yuki.data.items[i];\r\n                        for (let t: number = 0; t < 2600; t += Math.floor(\r\n                            1000 / BackgroundCanvasRenderingFPS\r\n                        )) {\r\n                            setTimeout(() => {\r\n                                if (item) {\r\n                                    item.y -= (\r\n                                        1 + 4 * item.r * item.dist / BackgroundCanvasRenderingFPS\r\n                                    ) * Math.sqrt(2600 - t) * $(window).height()! / 40000;\r\n                                }\r\n                            }, t);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n};\r\n","/*\r\n * @Author: Antoine YANG \r\n * @Date: 2020-08-28 21:56:38 \r\n * @Last Modified by: Antoine YANG\r\n * @Last Modified time: 2020-08-28 21:57:46\r\n */\r\n\r\nexport const BackgroundCanvasRenderingFPS: number = 60;\r\n","/*\r\n * @Author: Antoine YANG \r\n * @Date: 2020-08-29 00:17:10 \r\n * @Last Modified by:   Antoine YANG \r\n * @Last Modified time: 2020-08-29 00:17:10 \r\n */\r\n\r\nimport { Theme } from \"./typedict\";\r\nimport { Yuki } from \"../themes/Yuki\";\r\n\r\nexport interface Shared {\r\n    theme: Theme;\r\n};\r\n\r\nexport let Shared: Shared = {\r\n    theme: Yuki\r\n};\r\n","/*\r\n * @Author: Antoine YANG \r\n * @Date: 2020-08-28 21:07:40 \r\n * @Last Modified by: Antoine YANG\r\n * @Last Modified time: 2020-08-29 00:35:16\r\n */\r\n\r\nimport React from \"react\";\r\nimport { PageBody } from \"../methods/typedict\";\r\nimport { Shared } from \"../methods/globals\";\r\n\r\n\r\n/**\r\n * 这个页面级组件渲染对应地址 / .\r\n * \r\n * @export\r\n * @class Home\r\n * @extends {PageBody<{}>}\r\n */\r\nexport class Home extends PageBody<{}> {\r\n    \r\n    public render(): JSX.Element {\r\n        return (\r\n            <>\r\n                <h1 style={{\r\n                    color: Shared.theme.colortab.color,\r\n                    margin: \"calc(20px + 3vh)\"\r\n                }} >\r\n                    AntoineYANG\r\n                </h1>\r\n                <div style={{\r\n                    color: Shared.theme.colortab.color,\r\n                    margin: \"calc(10px + 6vh) calc(20px + 8vw) calc(10px + 3vh)\",\r\n                    padding: \"calc(12px + 5vh)\",\r\n                    border: `1px solid ${ Shared.theme.colortab.border }`,\r\n                    boxShadow: `6px 5px 0 1px ${\r\n                        Shared.theme.colortab.border.replace(\r\n                            \"(\", \"a(\"\r\n                        ).replace(\r\n                            \")\", \",0.1)\"\r\n                        )\r\n                    }`\r\n                }} >\r\n                    网站升级中...\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n\r\n};\r\n","/*\r\n * @Author: Antoine YANG \r\n * @Date: 2020-08-28 20:50:07 \r\n * @Last Modified by: Antoine YANG\r\n * @Last Modified time: 2020-08-29 00:35:17\r\n */\r\n\r\nimport React from \"react\";\r\nimport { PageBody } from \"../methods/typedict\";\r\nimport { Shared } from \"../methods/globals\";\r\n\r\n\r\n/**\r\n * 这个页面级组件在无法访问对应网址时渲染.\r\n * \r\n * @export\r\n * @class BadUrl\r\n * @extends {PageBody<{}>}\r\n */\r\nexport class BadUrl extends PageBody<{}> {\r\n    \r\n    public render(): JSX.Element {\r\n        return (\r\n            <>\r\n                <h1 style={{\r\n                    color: Shared.theme.colortab.color,\r\n                    margin: \"calc(20px + 3vh)\"\r\n                }} >\r\n                    404\r\n                </h1>\r\n                <div style={{\r\n                    color: Shared.theme.colortab.color,\r\n                    margin: \"calc(10px + 6vh) calc(20px + 8vw) calc(10px + 3vh)\",\r\n                    padding: \"calc(12px + 5vh)\",\r\n                    border: `1px solid ${ Shared.theme.colortab.border }`,\r\n                    boxShadow: `6px 5px 0 1px ${\r\n                        Shared.theme.colortab.border.replace(\r\n                            \"(\", \"a(\"\r\n                        ).replace(\r\n                            \")\", \",0.1)\"\r\n                        )\r\n                    }`\r\n                }} >\r\n                    很抱歉，您访问的页面不存在。\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n\r\n};\r\n","/*\r\n * @Author: Antoine YANG \r\n * @Date: 2020-08-28 21:15:16 \r\n * @Last Modified by: Antoine YANG\r\n * @Last Modified time: 2020-08-29 13:59:48\r\n */\r\n\r\nimport React, { Component } from \"react\";\r\nimport $ from \"jquery\";\r\nimport { Theme } from \"../methods/typedict\";\r\n\r\n\r\nexport interface BackgroundCanvasProps {\r\n    initTheme: Theme;\r\n};\r\n\r\nexport interface BackgroundCanvasState {\r\n    curTheme: Theme;\r\n};\r\n\r\n/**\r\n * 这个组件将作为页面的背景，\r\n * 其定位不随页面移动.\r\n * 建议在页面其他元素的最外层渲染.\r\n * \r\n * @export\r\n * @class BackgroundCanvas\r\n * @extends {Component<BackgroundCanvasProps, BackgroundCanvasState>}\r\n */\r\nexport class BackgroundCanvas extends Component<BackgroundCanvasProps, BackgroundCanvasState> {\r\n\r\n    protected canvas: React.RefObject<HTMLCanvasElement>;\r\n    protected ctx?: CanvasRenderingContext2D;\r\n\r\n    public constructor(props: BackgroundCanvasProps) {\r\n        super(props);\r\n        this.state = {\r\n            curTheme: this.props.initTheme\r\n        };\r\n\r\n        this.canvas = React.createRef<HTMLCanvasElement>();\r\n    }\r\n\r\n    public render(): JSX.Element {\r\n        return (\r\n            <>\r\n                <canvas ref={ this.canvas }\r\n                width=\"100%\" height=\"100%\" style={{\r\n                    position: \"fixed\",\r\n                    top: 0,\r\n                    left: 0,\r\n                    zIndex: -9999,\r\n                    cursor: \"none\"\r\n                }}\r\n                onMouseOver={\r\n                    e => {\r\n                        if (this.state.curTheme.mouseListener) {\r\n                            this.state.curTheme.mouseListener(e);\r\n                        }\r\n                    }\r\n                }\r\n                onMouseOut={\r\n                    e => {\r\n                        if (this.state.curTheme.mouseListener) {\r\n                            this.state.curTheme.mouseListener(e);\r\n                        }\r\n                    }\r\n                }\r\n                onClick={\r\n                    e => {\r\n                        if (this.state.curTheme.mouseListener) {\r\n                            this.state.curTheme.mouseListener(e);\r\n                        }\r\n                    }\r\n                }\r\n                onMouseMove={\r\n                    e => {\r\n                        if (this.state.curTheme.mouseListener) {\r\n                            this.state.curTheme.mouseListener(e);\r\n                        }\r\n                    }\r\n                }\r\n                onTouchStart={\r\n                    e => {\r\n                        if (this.state.curTheme.touchListener) {\r\n                            this.state.curTheme.touchListener(e);\r\n                        }\r\n                    }\r\n                }\r\n                onTouchMove={\r\n                    e => {\r\n                        if (this.state.curTheme.touchListener) {\r\n                            this.state.curTheme.touchListener(e);\r\n                        }\r\n                    }\r\n                }\r\n                onTouchEnd={\r\n                    e => {\r\n                        if (this.state.curTheme.touchListener) {\r\n                            this.state.curTheme.touchListener(e);\r\n                        }\r\n                    }\r\n                } />\r\n                <>\r\n                    { this.props.children }\r\n                </>\r\n            </>\r\n        );\r\n    }\r\n\r\n    public componentDidMount(): void {\r\n        // 设定大小\r\n        this.canvas.current!.width = $(window).width()!;\r\n        this.canvas.current!.height = $(window).height()!;\r\n        // 获取 canvas 上下文\r\n        this.ctx = this.canvas.current!.getContext(\"2d\")!;\r\n        // 绑定监听\r\n        $(window).on(\"resize\", () => {\r\n            this.canvas.current!.width = $(window).width()!;\r\n            this.canvas.current!.height = $(window).height()!;\r\n        });\r\n        // 开始渲染\r\n        this.state.curTheme.start(this.ctx!);\r\n    }\r\n\r\n    public getSnapshotBeforeUpdate(): void {\r\n        // 停止渲染\r\n        this.state.curTheme.end();\r\n    }\r\n\r\n    public componentDidUpdate(): void {\r\n        // 开始渲染\r\n        this.state.curTheme.start(this.ctx!);\r\n    }\r\n\r\n};\r\n","import React, { Component } from 'react';\nimport './App.css';\nimport { HashRouter, Switch, Route } from 'react-router-dom';\nimport { Home } from './routings/Home';\nimport { BadUrl } from './routings/BadUrl';\nimport { BackgroundCanvas } from './themes/BackgroundCanvas';\nimport { Theme } from './methods/typedict';\nimport { Shared } from './methods/globals';\n\n\nexport interface AppState {\n  theme: Theme;\n};\n\n/**\n * 默认的最外层渲染元素.\n *\n * @class App\n * @extends {Component<{}, {}>}\n */\nclass App extends Component<{}, AppState> {\n\n  public constructor(props: {}) {\n    super(props);\n    this.state = {\n      theme: Shared.theme\n    };\n  }\n\n  public render(): JSX.Element {\n    Shared.theme = this.state.theme;\n\n    return (\n      <div className=\"App\">\n        <BackgroundCanvas initTheme={ this.state.theme } >\n          <HashRouter>\n            <Switch>\n              <Route path=\"/\" exact component={ Home } />\n              <Route path=\"/**\" component={ BadUrl } />\n            </Switch>\n          </HashRouter>\n        </BackgroundCanvas>\n      </div>\n    );\n  }\n\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}