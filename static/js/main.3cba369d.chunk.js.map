{"version":3,"sources":["Contaniners/Navigator.tsx","Contaniners/Container.tsx","MainPages/Home.tsx","MainPages/BadUrl.tsx","MainPages/ContactMe.tsx","Proxy.ts","App.tsx","serviceWorker.ts","index.tsx"],"names":["Navigator","props","className","style","background","color","fontSize","border","display","padding","width","textAlign","this","to","fontStyle","margin","letterSpacing","items","map","item","i","parseJSX","url","key","text","Component","Container","mode","minHeight","children","Home","fontWeight","BadUrl","ContactMe","href","id","textDecoration","Sys","e","elementTop","offset","top","elementHeight","height","windowHeight","$","window","pageHeight","document","pageOffset","scrollTop","Math","max","min","App","path","exact","component","onresize","updateContainers","bind","onscroll","each","_","state","css","Boolean","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.3cba369d.chunk.js","sourcesContent":["/*\r\n * @Author: Antoine YANG \r\n * @Date: 2020-04-13 16:47:52 \r\n * @Last Modified by: Antoine YANG\r\n * @Last Modified time: 2020-04-14 13:06:45\r\n */\r\n\r\nimport React, { Component } from \"react\";\r\nimport { Link, HashRouter } from \"react-router-dom\";\r\n\r\n\r\nexport type MenuItem = {\r\n    text: string;\r\n    url: string;\r\n};\r\n\r\nexport type Menu = Array<MenuItem>;\r\n\r\nexport interface NavigatorProps {\r\n    style?: React.CSSProperties;\r\n    items: Menu;\r\n};\r\n\r\nexport interface NavigatorState {\r\n    style?: React.CSSProperties;\r\n};\r\n\r\n\r\nexport class Navigator extends Component<NavigatorProps, NavigatorState, undefined> {\r\n    public constructor(props: NavigatorProps) {\r\n        super(props);\r\n    }\r\n\r\n    public render(): JSX.Element {\r\n        return (\r\n            <div className=\"container monospaced unselectable\"\r\n            style={{\r\n                background: \"#20242A\",\r\n                color: \"white\",\r\n                fontSize: \"16px\",\r\n                border: \"none\",\r\n                display: \"flex\",\r\n                padding: \"10px 16px\",\r\n                width: \"calc(100% - 32px)\",\r\n                textAlign: \"left\",\r\n                ...this.props.style\r\n            }} >\r\n                <HashRouter>\r\n                    <Link to=\"/\" >\r\n                        <label className=\"inactive\"\r\n                        style={{\r\n                            display: \"inline-block\",\r\n                            textAlign: \"center\",\r\n                            fontStyle: \"italic\",\r\n                            width: \"88px\",\r\n                            margin: \"5px 1vmin 5px 1vmin\",\r\n                            fontSize: \"22px\",\r\n                            letterSpacing: \"-0.06em\"\r\n                        }} >\r\n                            Shiokaze\r\n                        </label>\r\n                    </Link>\r\n                </HashRouter>\r\n                <nav\r\n                style={{\r\n                    margin: \"0 2.4vmin\",\r\n                    padding: \"5.9px 0\",\r\n                    display: \"flex\"\r\n                }} >\r\n                    <HashRouter>\r\n                        {\r\n                            this.props.items.map((item: MenuItem, i: number) => {\r\n                                return this.parseJSX(item);\r\n                            })\r\n                        }\r\n                    </HashRouter>\r\n                </nav>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    private parseJSX(item: MenuItem): JSX.Element {\r\n        return (\r\n            <Link to={ item.url } key={ item.text } >\r\n                <label className=\"MenuItem inactive\" >\r\n                    { item.text }\r\n                </label>\r\n            </Link>\r\n        );\r\n    }\r\n};\r\n","/*\r\n * @Author: Antoine YANG \r\n * @Date: 2020-04-13 16:20:08 \r\n * @Last Modified by: Antoine YANG\r\n * @Last Modified time: 2020-04-14 13:03:54\r\n */\r\n\r\nimport React, { Component } from \"react\";\r\n\r\n\r\nexport interface ContainerProps {\r\n    style?: React.CSSProperties;\r\n    mode: \"info\" | \"text\";\r\n};\r\n\r\nexport interface ContainerState {};\r\n\r\nexport class Container extends Component<ContainerProps, ContainerState, {}> {\r\n    public constructor(props: ContainerProps) {\r\n        super(props);\r\n    }\r\n\r\n    public render(): JSX.Element {\r\n      return (\r\n        <div className={ \"container box monospaced unselectable \" + this.props.mode }\r\n        style={{\r\n          minHeight: \"16vmin\",\r\n          padding: \"4vmin 10vmin\",\r\n          fontSize: \"calc(4px + 2vmin)\",\r\n          ...this.props.style\r\n        }} >\r\n          { this.props.children }\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n","/*\r\n * @Author: Antoine YANG \r\n * @Date: 2020-04-13 18:08:15 \r\n * @Last Modified by: Antoine YANG\r\n * @Last Modified time: 2020-04-14 13:15:02\r\n */\r\n\r\nimport React, { Component } from 'react';\r\nimport { Container } from \"../Contaniners/Container\";\r\nimport '../App.css';\r\n\r\n\r\nexport class Home extends Component<{}, {}, {}> {\r\n  public render(): JSX.Element {\r\n    return (\r\n      <>\r\n        <Container mode=\"text\" >\r\n          <hr className=\"head\" />\r\n          <header style={{\r\n            fontWeight: \"bold\"\r\n          }} >\r\n            Hello! This is Antoine YANG's blog.\r\n          </header>\r\n        </Container>\r\n        <Container mode=\"info\" >\r\n          <hr className=\"head\" />\r\n          <p>\r\n            Sorry that this site is still under developing.\r\n          </p>\r\n          <p>\r\n            Hope to see you here in the near future. (´∀｀)\r\n          </p>\r\n        </Container>\r\n        <Container mode=\"text\" >\r\n          <hr className=\"head\" />\r\n          <p>\r\n            I've just started working on this project as my private blog.\r\n            After the system is built,\r\n            I want to share some exprience and ideas I get through\r\n            my study and programming.\r\n            Therefore, I also want to display something I programmed before\r\n            on this site, or maybe some new component such like some mini web games.\r\n          </p>\r\n          <p>\r\n            All in all, this project will be a long term one.\r\n            I do hope that I could make it a wonderful site\r\n            not only for myself but everyone visits.\r\n          </p>\r\n          <p>\r\n            See you next time, <b>Thanks!</b>\r\n          </p>\r\n          <br />\r\n          <p>\r\n            April 14th, 2020\r\n          </p>\r\n        </Container>\r\n        <Container mode=\"text\" >\r\n          <hr className=\"head\" />\r\n          <p>\r\n            If you want to send me messages, click <b>Contact Me</b> on the top navigator.\r\n          </p>\r\n        </Container>\r\n        </>\r\n    );\r\n  }\r\n}\r\n","/*\r\n * @Author: Antoine YANG \r\n * @Date: 2020-04-13 18:12:52 \r\n * @Last Modified by: Antoine YANG\r\n * @Last Modified time: 2020-04-14 13:04:59\r\n */\r\n\r\nimport React, { Component } from 'react';\r\nimport { Container } from \"../Contaniners/Container\";\r\nimport '../App.css';\r\n\r\n\r\nexport class BadUrl extends Component<{}, {}, {}> {\r\n  public render(): JSX.Element {\r\n    return (\r\n        <Container mode=\"info\" >\r\n          <hr className=\"head\" />\r\n          <p>\r\n            Welcome to the Vaccum.\r\n          </p>\r\n        </Container>\r\n    );\r\n  }\r\n}\r\n","/*\r\n * @Author: Antoine YANG \r\n * @Date: 2020-04-13 20:59:01 \r\n * @Last Modified by: Antoine YANG\r\n * @Last Modified time: 2020-04-14 13:05:07\r\n */\r\n\r\nimport React, { Component } from 'react';\r\nimport { Container } from \"../Contaniners/Container\";\r\nimport '../App.css';\r\n\r\n\r\nexport class ContactMe extends Component<{}, {}, {}> {\r\n  public render(): JSX.Element {\r\n    return (\r\n        <Container mode=\"text\" >\r\n            <div>\r\n                <hr className=\"head\" />\r\n                <p>\r\n                    Grateful to our accquitance! \r\n                </p>\r\n                <p>\r\n                    If you are interested in this site,\r\n                </p>\r\n                <p>\r\n                    Or want to share some ideas with me,\r\n                </p>\r\n                <p>\r\n                    <a href=\"https://github.com/AntoineYANG\" >Click here</a> to see my GitHub page.\r\n                </p>\r\n                <p>\r\n                    You can also send e-mails to&nbsp;\r\n                    <i className=\"selectable\" id=\"email\" style={{\r\n                        textDecoration: \"underline\"\r\n                    }} >\r\n                        antoineyang99@gmail.com\r\n                    </i>.\r\n                </p>\r\n            </div>\r\n        </Container>\r\n    );\r\n  }\r\n}\r\n","/*\r\n * @Author: Antoine YANG \r\n * @Date: 2020-04-13 16:36:49 \r\n * @Last Modified by: Antoine YANG\r\n * @Last Modified time: 2020-04-14 13:00:09\r\n */\r\n\r\nimport $ from \"jquery\";\r\n\r\nexport type ElementVisibility = number;\r\n\r\ninterface ProxyInterface {\r\n    isElementVisible: (e: JQuery<HTMLElement>) => ElementVisibility;\r\n};\r\n\r\nexport const Sys: ProxyInterface = {\r\n    isElementVisible: (e: JQuery<HTMLElement>) => {\r\n        const elementTop: number = e.offset()!.top;\r\n        const elementHeight: number = e.height()!;\r\n        const windowHeight: number = $(window).height()!;\r\n        const pageHeight: number = $(document).height()!;\r\n        const pageOffset: number = $(document).scrollTop()!;\r\n\r\n        const covered: number = Math.max(\r\n            0,\r\n            Math.min(\r\n                elementTop + elementHeight - pageOffset,\r\n                windowHeight\r\n            ) - Math.max(\r\n                elementTop - pageOffset,\r\n                0\r\n            )\r\n        );\r\n\r\n        return covered / Math.min(pageHeight * 0.8, elementHeight);\r\n    }\r\n};\r\n","/*\r\n * @Author: Antoine YANG \r\n * @Date: 2020-04-13 15:29:03 \r\n * @Last Modified by: Antoine YANG\r\n * @Last Modified time: 2020-04-14 13:15:26\r\n */\r\nimport React, { Component } from 'react';\r\nimport $ from \"jquery\";\r\nimport { Navigator } from \"./Contaniners/Navigator\";\r\nimport { Switch, Route, HashRouter } from 'react-router-dom';\r\nimport './App.css';\r\nimport { Home } from \"./MainPages/Home\";\r\nimport { BadUrl } from \"./MainPages/BadUrl\";  \r\nimport { ContactMe } from './MainPages/ContactMe';\r\nimport { ElementVisibility, Sys } from './Proxy';\r\n\r\n\r\nclass App extends Component<{}, {}, {}> {\r\n  public render(): JSX.Element {\r\n    return (\r\n      <>\r\n        <Navigator items={ [{\r\n          text: \"Home\",\r\n          url: \"/\"\r\n        }, {\r\n          text: \"Most Viewed\",\r\n          url: \"/most_viewed\"\r\n        }, {\r\n          text: \"Recent\",\r\n          url: \"/recent\"\r\n        }, {\r\n          text: \"Contact Me\",\r\n          url: \"/contact_me\"\r\n        }] } />\r\n        <div id=\"main\"\r\n        style={{\r\n          margin: \"60px auto\",\r\n          width: \"80%\"\r\n        }} >\r\n          <HashRouter>\r\n            <Switch>\r\n              <Route path=\"/\" exact component={ Home } />\r\n              <Route path=\"/contact_me\" exact component={ ContactMe } />\r\n              <Route path=\"/**\" component={ BadUrl } />\r\n            </Switch>\r\n          </HashRouter>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n\r\n  public componentDidMount(): void {\r\n    window.onresize = this.updateContainers.bind(this);\r\n    window.onscroll = this.updateContainers.bind(this);\r\n    this.updateContainers();\r\n  }\r\n\r\n  private updateContainers(): void {\r\n    const containers: JQuery<HTMLDivElement> = $(\"div.box\");\r\n\r\n    containers.each((_: number, e: HTMLDivElement) => {\r\n      const state: ElementVisibility = Sys.isElementVisible($(e));\r\n\r\n      $(e).css(\"background\", `rgba(252, 251, 249, ${ 0.1 + state * 0.7 })`);\r\n    })\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      process.env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}